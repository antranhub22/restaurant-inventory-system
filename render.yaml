services:
  # Backend API Service
  - type: web
    name: restaurant-inventory-backend
    env: node
    plan: starter
    buildCommand: |
      cd backend
      npm install
      npm install --save-dev @types/node @types/express @types/cors @types/bcrypt @types/compression @types/morgan
      export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DATABASE}?schema=public"
      npx prisma generate
      npx prisma migrate deploy
      npm run build
    startCommand: |
      cd backend
      npm run start:prod
    envVars:
      - key: NODE_ENV
        value: production
      - key: POSTGRES_USER
        value: restaurant_user
      - key: POSTGRES_PASSWORD
        sync: false
      - key: POSTGRES_HOST
        sync: false
      - key: POSTGRES_DATABASE
        value: restaurant_inventory
      - key: JWT_SECRET
        sync: false
      - key: REDIS_URL
        sync: false
      - key: PORT
        value: 3000
    healthCheckPath: /api/health
    autoDeploy: true

  # Frontend Web Service
  - type: web
    name: restaurant-inventory-frontend
    env: static
    buildCommand: |
      cd backend/frontend
      find src -name "*.test.*" -type f -delete
      npm ci
      npm install --save-dev @types/react @types/react-dom @testing-library/react @testing-library/jest-dom @types/jest
      VITE_SKIP_TESTS=true npm run build -- --skipLibCheck --force
    staticPublishPath: ./backend/frontend/dist
    envVars:
      - key: VITE_API_URL
        value: https://restaurant-inventory-backend.onrender.com
      - key: NODE_ENV
        value: production
      - key: VITE_SKIP_TESTS
        value: "true"
    autoDeploy: true

databases:
  - name: restaurant-inventory-db
    databaseName: restaurant_inventory
    user: restaurant_user
    plan: free 