const { createWorker } = require('tesseract.js');
const fs = require('fs');
const path = require('path');

async function testTesseract() {
  console.log('üß™ Testing Tesseract.js v·ªõi ti·∫øng Vi·ªát...');
  
  try {
    // 1. Ki·ªÉm tra file test
    const testImagePath = 'test_receipt.png';
    if (!fs.existsSync(testImagePath)) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y test_receipt.png');
      return;
    }
    
    console.log('‚úÖ Found test image');
    
    // 2. Kh·ªüi t·∫°o Tesseract worker v·ªõi ti·∫øng Vi·ªát + Anh
    console.log('üìö Initializing Tesseract worker...');
    const worker = await createWorker('vie+eng', 1, {
      logger: m => console.log(`Tesseract: ${m.status} - ${(m.progress * 100).toFixed(1)}%`)
    });
    
    // 3. C·∫•u h√¨nh t·ªëi ∆∞u cho h√≥a ƒë∆°n ti·∫øng Vi·ªát
    console.log('‚öôÔ∏è  Configuring Tesseract...');
    await worker.setParameters({
      tessedit_char_whitelist: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz√Ä√Å√Ç√É√à√â√ä√å√ç√í√ì√î√ï√ô√ö√ù√†√°√¢√£√®√©√™√¨√≠√≤√≥√¥√µ√π√∫√ΩƒÇƒÉƒêƒëƒ®ƒ©≈®≈©∆†∆°∆Ø∆∞·∫†-·ªπ .,():/-',
      tessedit_pageseg_mode: '6' // uniform block of text
    });
    
    // 4. X·ª≠ l√Ω OCR
    console.log('üîç Processing OCR...');
    const startTime = Date.now();
    const result = await worker.recognize(testImagePath);
    const processingTime = Date.now() - startTime;
    
    await worker.terminate();
    
    // 5. Hi·ªÉn th·ªã k·∫øt qu·∫£
    console.log('\n‚ú® K·∫æT QU·∫¢ OCR:');
    console.log('================');
    console.log('üìÑ Text:', result.data.text);
    console.log('üéØ Confidence:', (result.data.confidence).toFixed(1), '%');
    console.log('‚è±Ô∏è  Processing time:', processingTime, 'ms');
    console.log('üìä Word count:', result.data.text.split(/\s+/).filter(Boolean).length);
    
    // 6. Ph√¢n t√≠ch t·ª´ng line
    const lines = result.data.text.split('\n').map(line => line.trim()).filter(Boolean);
    console.log('\nüìù Chi ti·∫øt t·ª´ng d√≤ng:');
    lines.forEach((line, index) => {
      console.log(`  ${index + 1}. "${line}"`);
    });
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  }
}

testTesseract(); 